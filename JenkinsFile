pipeline {
    agent any

    environment {
        project_name = "PythonVulnApp"
        git_branch_name = "${BRANCH_NAME}"
        currDir = "${WORKSPACE}"
        scannerHome = tool 'sonarqube_scanner';  
    }    


   stages {
         stage("Env Variables") {
             steps {
                 sh "printenv"
             }
         }

        stage('Trufflehog Scan') {
            steps {
                sh 'echo "Running TruffleHog Scan!"'
                // sh 'trufflehog github --repo https://github.com/supriyasupekar26/PythonVulnApp.git --token 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 --no-verification --json --fail'
            }
        }
//        stage('Snyk Scanning'){
//            steps {
//                withCredentials([string(credentialsId: 'SNYK_Token', variable: 'SNYK_SECRET')]) {
//                 echo 'Snyk Testing...'
//                 sh """ snyk auth ${SNYK_SECRET} \
//                        snyk --project-name "${env.project_name}" --file . 
//                    """    
           
//         //         snykSecurity(
//         //           snykInstallation: 'Snyk',
//         //           snykTokenId: '794baaeb-0374-4316-a3cf-c4b7a32a5828',
//         //           projectName: "${env.project_name}",
//         //           failOnIssues: false,
//         //           failOnError: false
//         //         )
//         }
//       }
//        }
        
    //     stage('SonarQube analysis') {     
    //         steps {
    //             withSonarQubeEnv('SonarQube') {
    //                 sh """ ${env.scannerHome}/bin/sonar-scanner \
    //                         -Dsonar.projectKey=${env.project_name} \
    //                         -Dsonar.projectName=${env.project_name} \
    //                         -Dsonar.projectVersion=${BUILD_NUMBER}-${env.git_branch_name} \
    //                         -Dsonar.organization="supriyasupekar26"
    //                     """ 
    //                                 }           
//
    //             sleep 60
    //             waitForQualityGate abortPipeline: true                       
    //     }
    // }
    stage('Build') {
        steps {
            script {
            print "Building docker image..."
            sh """docker build -t "supriyasupekar/pyhtonvulnapp:${BUILD_NUMBER}" .
               """      
//                docker push "supriyasupekar/pyhtonvulnapp:${BUILD_NUMBER}"               
            }
        }
    }
    
    stage('Extract Image Id') {
        steps {
            script {
                def IMAGE_ID = sh(script: "docker images | grep -E '^supriyasupekar/pyhtonvulnapp:${BUILD_NUMBER}' | head -1 | awk '{print \$3}'", returnStdout: true).trim()
                echo "Image Id extracted: ${IMAGE_ID}"
                env.IMAGE_ID = IMAGE_ID
            }
        }
    }

    stage('Validate With Qualys') {
        steps {
            echo "Image Id to get vulns: ${env.IMAGE_ID}"
            getImageVulnsFromQualys imageIds: env.IMAGE_ID, useGlobalConfig: true
        }
    }    
    
}       

}

